// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Job_creation_incorrect', function() {
  this.timeout(100000)
  /**@type {import('selenium-webdriver').ThenableWebDriver} */
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Job_creation_incorrect', async function() {
    await driver.get("https://incognitohr.com/en")
    await driver.manage().window().setRect({width: 1920, height: 1080})
    await driver.findElement(By.linkText("Sign in")).click()
    await driver.findElement(By.id("loginform-identity")).click()
    await driver.findElement(By.id("loginform-identity")).sendKeys("testmail.ecosmart@gmail.com")
    await driver.findElement(By.id("loginform-password")).click()
    await driver.findElement(By.id("loginform-password")).sendKeys(Key.SPACE, Key.SPACE, Key.SPACE, Key.SPACE, Key.SPACE, '1')
    await driver.findElement(By.name("login-button")).click()
    await driver.wait(until.elementLocated(By.linkText("Account")), 5000);

    await driver.findElement(By.linkText("Account")).click()
    await driver.findElement(By.css(".sub-menu:nth-child(3) > span")).click()

    await driver.wait(until.elementLocated(By.linkText("Add Job")), 5000);

    await driver.findElement(By.linkText("Add Job")).click()
    await driver.findElement(By.id("job-title")).click()
    await driver.findElement(By.id("job-title")).sendKeys("Auto_Test_Job_Creation")
    await driver.findElement(By.id("job-meta_category")).click()
    {
      const dropdown = await driver.findElement(By.id("job-meta_category"))
      await dropdown.findElement(By.xpath("//option[. = 'Java']")).click()
    }
    await driver.findElement(By.id("job-meta_salary")).click()
    await driver.findElement(By.id("job-meta_salary")).sendKeys("1111")
    await driver.findElement(By.id("job-meta_currency")).click()
    {
      const dropdown = await driver.findElement(By.id("job-meta_currency"))
      await dropdown.findElement(By.xpath("//option[. = 'USD']")).click()
    }
    await driver.findElement(By.id("meta-country")).click()
    {
      const dropdown = await driver.findElement(By.id("meta-country"))
      await dropdown.findElement(By.xpath("//option[. = 'Poland']")).click()
    }
    await driver.findElement(By.id("meta-region")).click()
    {
      const dropdown = await driver.findElement(By.id("meta-region"))
      await dropdown.findElement(By.xpath("//option[. = 'Lubuskie']")).click()
    }
    await driver.findElement(By.id("meta-city")).click()
    {
      const dropdown = await driver.findElement(By.id("meta-city"))
      await dropdown.findElement(By.xpath("//option[. = 'Bobrowice']")).click()
    }
    await driver.findElement(By.css(".re-html")).click()
    await driver.executeScript(`document.querySelector(".field-job-description").scrollIntoView()`);
    
    
    // await driver.sleep(5000)
    await driver.findElement(By.xpath('/html/body/main/section/div/div[2]/div[2]/div/form/div/div/div[11]/div/span/span[1]/span/ul/li/input')).click()
    await driver.findElement(By.xpath('/html/body/main/section/div/div[2]/div[2]/div/form/div/div/div[11]/div/span/span[1]/span/ul/li/input')).sendKeys(`Test${Key.SPACE}`)
    // await driver.sleep(5000)
    await driver.findElement(By.xpath('/html/body/main/section/div/div[2]/div[2]/div/form/div/div/div[11]/div/span/span[1]/span/ul/li/input')).sendKeys(`Automation${Key.SPACE}`)
    // await driver.sleep(5000)

    await driver.findElement(By.id("job-meta_english_level")).click()
    {
      const dropdown = await driver.findElement(By.id("job-meta_english_level"))
      await dropdown.findElement(By.xpath("//option[. = 'Advanced C1-C2']")).click()
    }
    
    // await driver.sleep(10000)
    
    await driver.findElement(By.css("#job-meta_job_type > .custom-control:nth-child(1) > .custom-control-label")).click()
    
    // await driver.sleep(5000)
    await driver.executeScript(`document.querySelector(".field-job-meta_contract_type").scrollIntoView()`);

    await driver.findElement(By.xpath('//*[@id="job-meta_contract_type"]/div[2]/label')).click()
    await driver.findElement(By.id("job-meta_experience_from")).click()
    await driver.findElement(By.id("job-meta_experience_from")).sendKeys("2")
    await driver.findElement(By.id("job-meta_experience_to")).click()
    await driver.findElement(By.id("job-meta_experience_to")).sendKeys("6")

    await driver.wait(until.elementLocated(By.css(".btn-wide")), 5000);

    await driver.findElement(By.xpath('//*[@id="job-form"]/div/div/div[16]/button')).click()

    
    {
      await driver.wait(until.elementLocated(By.css(".alert-danger")), 5000);
      const elements = await driver.findElements(By.css(".alert-danger"))
      assert(elements.length)
    }

    await driver.findElement(By.linkText("Account")).click()
    await driver.findElement(By.linkText("My Jobs")).click()

    await driver.wait(until.elementLocated(By.css("#w0 > li:nth-child(1) > a")), 5000);
    
    await driver.findElement(By.css("#w0 > li:nth-child(1) > a")).click()
    {
      const elements = await driver.findElements(By.linkText("Auto_Test_Job_Creation"))
      console.log('kek:', elements);
      assert(elements.length === 0)
    }
    {
      const elements = await driver.findElements(By.xpath("//p[contains(.,\'â€‹Lorem ipsum dolor sit, amet consectetur adipisicing elit. Accusantium, error voluptates tempore veritatis voluptatibus minima qui ipsa doloribus laboriosam obcaecati corporis officiis magni, eius temporibus incidunt quisquam labore, sunt recusandae.\')]"))
      assert(elements.length === 0)
    }
    await driver.findElement(By.linkText("Logout")).click()
    await driver.sleep(2000)
  })
})
